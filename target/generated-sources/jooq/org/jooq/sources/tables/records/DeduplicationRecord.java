/*
 * This file is generated by jOOQ.
 */
package org.jooq.sources.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.jooq.sources.tables.Deduplication;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeduplicationRecord extends TableRecordImpl<DeduplicationRecord> implements Record2<String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.deduplication.value</code>.
     */
    public void setValue(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.deduplication.value</code>.
     */
    public String getValue() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.deduplication.timestamp</code>.
     */
    public void setTimestamp(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.deduplication.timestamp</code>.
     */
    public Long getTimestamp() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Deduplication.DEDUPLICATION.VALUE;
    }

    @Override
    public Field<Long> field2() {
        return Deduplication.DEDUPLICATION.TIMESTAMP;
    }

    @Override
    public String component1() {
        return getValue();
    }

    @Override
    public Long component2() {
        return getTimestamp();
    }

    @Override
    public String value1() {
        return getValue();
    }

    @Override
    public Long value2() {
        return getTimestamp();
    }

    @Override
    public DeduplicationRecord value1(String value) {
        setValue(value);
        return this;
    }

    @Override
    public DeduplicationRecord value2(Long value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public DeduplicationRecord values(String value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DeduplicationRecord
     */
    public DeduplicationRecord() {
        super(Deduplication.DEDUPLICATION);
    }

    /**
     * Create a detached, initialised DeduplicationRecord
     */
    public DeduplicationRecord(String value, Long timestamp) {
        super(Deduplication.DEDUPLICATION);

        setValue(value);
        setTimestamp(timestamp);
    }
}
